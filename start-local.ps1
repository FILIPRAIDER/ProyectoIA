# üöÄ Script para Iniciar Entorno de Desarrollo Local

Write-Host ""
Write-Host "============================================" -ForegroundColor Cyan
Write-Host "üöÄ INICIANDO ENTORNO LOCAL" -ForegroundColor Cyan
Write-Host "============================================" -ForegroundColor Cyan
Write-Host ""

# Verificar que Docker est√° corriendo
Write-Host "üîç Verificando Docker..." -ForegroundColor Yellow
try {
    docker ps > $null 2>&1
    if ($LASTEXITCODE -ne 0) {
        throw "Docker no est√° corriendo"
    }
    Write-Host "‚úÖ Docker est√° corriendo" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Docker no est√° corriendo" -ForegroundColor Red
    Write-Host ""
    Write-Host "Por favor inicia Docker Desktop primero" -ForegroundColor Yellow
    Write-Host ""
    exit 1
}

# Iniciar PostgreSQL
Write-Host ""
Write-Host "üì¶ Iniciando PostgreSQL..." -ForegroundColor Yellow
docker-compose up -d

if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ PostgreSQL iniciado" -ForegroundColor Green
} else {
    Write-Host "‚ùå Error iniciando PostgreSQL" -ForegroundColor Red
    exit 1
}

# Esperar a que est√© listo
Write-Host ""
Write-Host "‚è≥ Esperando a que PostgreSQL est√© listo..." -ForegroundColor Yellow
Start-Sleep -Seconds 3

$retries = 5
$ready = $false
for ($i = 1; $i -le $retries; $i++) {
    try {
        docker exec bridge-postgres pg_isready -U postgres > $null 2>&1
        if ($LASTEXITCODE -eq 0) {
            $ready = $true
            break
        }
    } catch {
        # Continuar esperando
    }
    Start-Sleep -Seconds 1
}

if ($ready) {
    Write-Host "‚úÖ PostgreSQL est√° listo" -ForegroundColor Green
} else {
    Write-Host "‚ö†Ô∏è  PostgreSQL est√° iniciando, puede tardar unos segundos m√°s" -ForegroundColor Yellow
}

# Mostrar info
Write-Host ""
Write-Host "============================================" -ForegroundColor Green
Write-Host "‚úÖ ENTORNO LISTO" -ForegroundColor Green
Write-Host "============================================" -ForegroundColor Green
Write-Host ""
Write-Host "üéØ Ahora puedes:" -ForegroundColor Cyan
Write-Host ""
Write-Host "1. Iniciar el backend:" -ForegroundColor White
Write-Host "   npm run dev" -ForegroundColor Yellow
Write-Host ""
Write-Host "2. Ver la base de datos:" -ForegroundColor White
Write-Host "   npx prisma studio" -ForegroundColor Yellow
Write-Host "   (Se abrir√° en http://localhost:5555)" -ForegroundColor Gray
Write-Host ""
Write-Host "3. Probar la API:" -ForegroundColor White
Write-Host "   http://localhost:4001/health" -ForegroundColor Yellow
Write-Host ""
Write-Host "============================================" -ForegroundColor Cyan
Write-Host ""
