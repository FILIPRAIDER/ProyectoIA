#!/usr/bin/env node

/**
 * üåç Script para agregar los nuevos sectores a la BASE DE DATOS DE PRODUCCI√ìN (Neon)
 * 
 * ‚ö†Ô∏è IMPORTANTE: Este script modificar√° la base de datos de PRODUCCI√ìN
 * 
 * Sectores a agregar: 17 nuevos sectores profesionales
 */

import { PrismaClient } from '@prisma/client';
import * as dotenv from 'dotenv';
dotenv.config();

// Obtener la URL de producci√≥n desde las variables de entorno
const PRODUCTION_DB_URL = process.env.PRODUCTION_DATABASE_URL || process.env.NEON_DATABASE_URL;

if (!PRODUCTION_DB_URL) {
  console.error('\n‚ùå ERROR: No se encontr√≥ la URL de la base de datos de producci√≥n');
  console.error('Por favor, define PRODUCTION_DATABASE_URL en tu .env con la URL de Neon\n');
  process.exit(1);
}

// ‚ö†Ô∏è CONEXI√ìN DIRECTA A PRODUCCI√ìN
const prismaProduction = new PrismaClient({
  datasources: {
    db: {
      url: PRODUCTION_DB_URL
    }
  }
});

const newSectors = [
  // Tecnolog√≠a
  { name: 'Inteligencia Artificial', icon: 'ü§ñ', description: 'Desarrollo de sistemas de IA, ML y automatizaci√≥n inteligente', order: 31 },
  { name: 'Blockchain y Web3', icon: '‚õìÔ∏è', description: 'Desarrollo de aplicaciones descentralizadas y criptomonedas', order: 32 },
  { name: 'Cloud Computing', icon: '‚òÅÔ∏è', description: 'Arquitectura e infraestructura en la nube', order: 33 },
  { name: 'Ciberseguridad', icon: 'üîí', description: 'Seguridad inform√°tica y protecci√≥n de datos', order: 34 },
  
  // Creativos
  { name: 'Dise√±o UX/UI', icon: 'üé®', description: 'Dise√±o de experiencia e interfaces de usuario', order: 35 },
  { name: 'Contenido Digital', icon: 'üì±', description: 'Creaci√≥n de contenido multimedia para plataformas digitales', order: 36 },
  { name: 'Publicidad Digital', icon: 'üì¢', description: 'Marketing digital y campa√±as publicitarias online', order: 37 },
  
  // Cient√≠ficos
  { name: 'Biotecnolog√≠a', icon: 'üß¨', description: 'Investigaci√≥n y desarrollo en biotecnolog√≠a', order: 38 },
  { name: 'Farmac√©utica', icon: 'üíä', description: 'Desarrollo farmac√©utico y medicamentos', order: 39 },
  { name: 'Medio Ambiente', icon: 'üå±', description: 'Sostenibilidad y proyectos ambientales', order: 40 },
  
  // Empresariales
  { name: 'Recursos Humanos', icon: 'üë•', description: 'Gesti√≥n de talento humano y desarrollo organizacional', order: 41 },
  { name: 'Data Analytics', icon: 'üìä', description: 'An√°lisis de datos y business intelligence', order: 42 },
  
  // Industriales
  { name: 'Rob√≥tica', icon: 'ü§ñ', description: 'Dise√±o y programaci√≥n de robots y sistemas automatizados', order: 43 },
  { name: 'Log√≠stica', icon: 'üöö', description: 'Gesti√≥n de cadena de suministro y distribuci√≥n', order: 44 },
  
  // Entretenimiento
  { name: 'Medios de Comunicaci√≥n', icon: 'üì∫', description: 'Producci√≥n audiovisual y periodismo digital', order: 45 },
  { name: 'M√∫sica', icon: 'üéµ', description: 'Producci√≥n musical y gesti√≥n de eventos', order: 46 },
  { name: 'Arte y Cultura', icon: 'üé≠', description: 'Proyectos art√≠sticos y gesti√≥n cultural', order: 47 }
];

async function addSectorsToProduction() {
  console.log('\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ');
  console.log('‚ö†Ô∏è  AGREGANDO SECTORES A BASE DE DATOS DE PRODUCCI√ìN');
  console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n');
  
  console.log('üåç Conectado a: Neon PostgreSQL (PRODUCCI√ìN)');
  console.log('üìã Sectores a agregar: 17\n');

  // Confirmar antes de proceder
  console.log('‚è≥ Verificando sectores existentes en producci√≥n...\n');

  const existingSectors = await prismaProduction.sector.findMany();
  console.log(`üìä Sectores actuales en producci√≥n: ${existingSectors.count || existingSectors.length}\n`);

  let added = 0;
  let skipped = 0;
  let errors = 0;

  for (const sector of newSectors) {
    try {
      // Verificar si ya existe
      const existing = await prismaProduction.sector.findFirst({
        where: { name: sector.name }
      });

      if (existing) {
        console.log(`‚è≠Ô∏è  ${sector.icon} ${sector.name} - Ya existe, omitiendo`);
        skipped++;
        continue;
      }

      // Crear el nuevo sector
      await prismaProduction.sector.create({
        data: {
          name: sector.name,
          nameEs: sector.name, // Mantener mismo nombre en espa√±ol
          nameEn: sector.name, // Puedes traducir si quieres
          description: sector.description,
          icon: sector.icon,
          active: true,
          order: sector.order
        }
      });

      console.log(`‚úÖ ${sector.icon} ${sector.name} - Agregado`);
      added++;
    } catch (error) {
      console.error(`‚ùå ${sector.icon} ${sector.name} - Error:`, error.message);
      errors++;
    }
  }

  console.log('\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ');
  console.log('üìä RESUMEN DE OPERACI√ìN EN PRODUCCI√ìN:');
  console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ');
  console.log(`   ‚úÖ Sectores agregados: ${added}`);
  console.log(`   ‚è≠Ô∏è  Sectores omitidos (ya exist√≠an): ${skipped}`);
  console.log(`   ‚ùå Errores: ${errors}`);
  
  const totalSectors = await prismaProduction.sector.count();
  console.log(`   üìä Total de sectores en producci√≥n: ${totalSectors}`);
  console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n');

  if (added > 0) {
    console.log('‚úÖ Los nuevos sectores ya est√°n disponibles en PRODUCCI√ìN');
    console.log('üåê Los usuarios ya pueden verlos en el frontend\n');
  } else if (skipped === newSectors.length) {
    console.log('‚ÑπÔ∏è  Todos los sectores ya exist√≠an en producci√≥n\n');
  }

  await prismaProduction.$disconnect();
}

// Ejecutar
console.log('\n‚ö†Ô∏è  ADVERTENCIA: Este script modificar√° la base de datos de PRODUCCI√ìN (Neon)');
console.log('‚è≥ Iniciando en 3 segundos... (Ctrl+C para cancelar)\n');

setTimeout(() => {
  addSectorsToProduction()
    .catch((error) => {
      console.error('\n‚ùå Error fatal:', error);
      process.exit(1);
    });
}, 3000);
