// scripts/test-connection.js
// Script para verificar la conexi√≥n a la base de datos

import { PrismaClient } from "@prisma/client";
import * as dotenv from "dotenv";

dotenv.config();

const prisma = new PrismaClient({
  log: ["query", "info", "warn", "error"],
});

async function testConnection() {
  console.log("üîç Probando conexi√≥n a la base de datos...\n");

  try {
    // Test 1: Conexi√≥n b√°sica
    console.log("1Ô∏è‚É£ Test de conexi√≥n b√°sica...");
    await prisma.$connect();
    console.log("‚úÖ Conexi√≥n establecida exitosamente\n");

    // Test 2: Query simple
    console.log("2Ô∏è‚É£ Test de query simple...");
    const userCount = await prisma.user.count();
    console.log(`‚úÖ Usuarios en la base de datos: ${userCount}\n`);

    // Test 3: Query de skills
    console.log("3Ô∏è‚É£ Test de query de skills...");
    const skillCount = await prisma.skill.count();
    console.log(`‚úÖ Skills en la base de datos: ${skillCount}\n`);

    // Test 4: Query de equipos
    console.log("4Ô∏è‚É£ Test de query de equipos...");
    const teamCount = await prisma.team.count();
    console.log(`‚úÖ Equipos en la base de datos: ${teamCount}\n`);

    // Test 5: Verificar pooling
    console.log("5Ô∏è‚É£ Test de m√∫ltiples queries concurrentes (pooling)...");
    const start = Date.now();
    await Promise.all([
      prisma.user.findMany({ take: 5 }),
      prisma.skill.findMany({ take: 5 }),
      prisma.team.findMany({ take: 5 }),
      prisma.company.findMany({ take: 5 }),
    ]);
    const elapsed = Date.now() - start;
    console.log(`‚úÖ Queries concurrentes completadas en ${elapsed}ms\n`);

    console.log("üéâ Todas las pruebas pasaron exitosamente!");
    console.log("\nüìä Configuraci√≥n de conexi√≥n:");
    console.log("- DATABASE_URL:", process.env.DATABASE_URL?.substring(0, 50) + "...");
    console.log("- Connection pooling: Activo");
    console.log("- Timeout: 20s");
    console.log("- Connection limit: 10");
  } catch (error) {
    console.error("\n‚ùå Error en las pruebas:");
    console.error("Error:", error.message);
    console.error("\nüìã Detalles del error:");
    console.error(error);
    process.exit(1);
  } finally {
    await prisma.$disconnect();
    console.log("\nüîå Conexi√≥n cerrada correctamente");
  }
}

testConnection();
